{"version":3,"sources":["services/reminderService.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newReminder","post","id","delete","AddReminder","props","addReminder","nameChange","nameValue","timeChange","timeValue","onSubmit","htmlFor","type","onChange","value","Reminder","reminder","deleter","localTime","Date","timestamp","toLocaleString","name","onClick","App","event","setState","newName","target","newTime","preventDefault","state","toISOString","reminders","some","alert","reminderService","concat","deleteReminder","window","confirm","filter","r","this","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OACMA,EAAU,iBAcD,EAZA,WACb,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWvC,EARA,SAACC,GACd,OAAOL,IAAMM,KAAKP,EAASM,GAAaH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAOrD,EAJA,SAACG,GACd,OAAOP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,K,OCT9BE,EAAc,SAACC,GACnB,IAAMC,EAAcD,EAAMC,YACpBC,EAAaF,EAAME,WACnBC,EAAYH,EAAMG,UAClBC,EAAaJ,EAAMI,WACnBC,EAAYL,EAAMK,UACxB,OACE,uBAAMC,SAAUL,EAAhB,UACE,gCACE,uBAAOM,QAAQ,aAAf,mBAGA,uBACEC,KAAK,OACLX,GAAG,aACHY,SAAUP,EACVQ,MAAOP,OAGX,gCACE,uBAAOI,QAAQ,aAAf,sBAGA,uBACEC,KAAK,iBACLX,GAAG,aACHY,SAAUL,EACVM,MAAOL,OAGX,8BACE,wBAAQG,KAAK,SAAb,+BAMFG,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtBC,EAAY,IAAIC,KAAKH,EAASI,WAAWC,iBAC/C,OACE,gCACIH,EADJ,IACgBF,EAASM,KACtB,wBAAQV,KAAK,SAASW,QAASN,EAA/B,wBAyFQO,E,kDAjFb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAcRE,WAAa,SAACmB,GACZ,EAAKC,SAAS,CAACC,QAASF,EAAMG,OAAOd,SAhBpB,EAkBnBN,WAAa,SAACiB,GACZ,EAAKC,SAAS,CAACG,QAASJ,EAAMG,OAAOd,SAnBpB,EAqBnBT,YAAc,SAACoB,GACbA,EAAMK,iBACN,IAAM/B,EAAc,CAClBuB,KAAM,EAAKS,MAAMJ,QACjBP,UAAW,IAAID,KAAK,EAAKY,MAAMF,SAASG,eAEtC,EAAKD,MAAME,UAAUC,MAAK,SAAAlB,GAAQ,OAAIA,EAASM,OAAS,EAAKS,MAAMJ,YACrEQ,MAAM,2BACN,EAAKT,SAAS,CACZC,QAAS,MAIXS,EACUrC,GACPH,MAAK,SAAAC,GAAQ,OACZ,EAAK6B,SAAS,CACZO,UAAW,EAAKF,MAAME,UAAUI,OAAOxC,GACvC8B,QAAS,SAvCA,EA6CnBW,eAAiB,SAACrC,GAChB,OAAO,WACDsC,OAAOC,QAAQ,YACjBJ,EACUnC,GACPL,MAAK,WACJ,EAAK8B,SAAS,CACZO,UAAW,EAAKF,MAAME,UAAUQ,QAAO,SAAAC,GAAC,OAAIA,EAAEzC,KAAOA,YAlD/D,EAAK8B,MAAQ,CACXE,UAAW,GACXN,QAAS,GACTE,SAAS,IAAIV,MAAOa,eALL,E,qDAQnB,WAAqB,IAAD,OAClBI,IAEGxC,MAAK,SAAAC,GACJ,EAAK6B,SAAS,CAACO,UAAWpC,S,oBA8ChC,WAAU,IAAD,OACP,OACE,gCACE,8CACA,cAAC,EAAD,CACEQ,YAAasC,KAAKtC,YAClBC,WAAYqC,KAAKrC,WACjBC,UAAWoC,KAAKZ,MAAMJ,QACtBnB,WAAYmC,KAAKnC,WACjBC,UAAWkC,KAAKZ,MAAMF,UAExB,4CACGc,KAAKZ,MAAME,UAAUW,KAAI,SAAA5B,GAAQ,OAChC,cAAC,EAAD,CAEEA,SAAUA,EACVC,QAAS,EAAKqB,eAAetB,EAASf,KAFjCe,EAASf,c,GAzEV4C,IAAMC,WC/CxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0b0057a8.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/reminders'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = (newReminder) => {\n  return axios.post(baseUrl, newReminder).then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, remove }\n","import React from 'react'\nimport reminderService from './services/reminderService'\n\nconst AddReminder = (props) => {\n  const addReminder = props.addReminder\n  const nameChange = props.nameChange\n  const nameValue = props.nameValue\n  const timeChange = props.timeChange\n  const timeValue = props.timeValue\n  return (\n    <form onSubmit={addReminder}>\n      <div>\n        <label htmlFor=\"name-input\">\n          Name:\n        </label>\n        <input\n          type=\"text\"\n          id=\"name-input\"\n          onChange={nameChange}\n          value={nameValue}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"time-input\">\n          At time:\n        </label>\n        <input\n          type=\"datetime-local\"\n          id=\"time-input\"\n          onChange={timeChange}\n          value={timeValue}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  )\n}\n\nconst Reminder = ({ reminder, deleter }) => {\n  const localTime = new Date(reminder.timestamp).toLocaleString()\n  return (\n    <div>\n       {localTime} {reminder.name}\n       <button type=\"button\" onClick={deleter}>\n         delete\n       </button>\n    </div>\n  )\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: [],\n      newName: '',\n      newTime: new Date().toISOString()\n    }\n  }\n  componentDidMount() {\n    reminderService\n      .getAll()\n      .then(response => {\n        this.setState({reminders: response})\n      })\n  }\n  nameChange = (event) => {\n    this.setState({newName: event.target.value})\n  }\n  timeChange = (event) => {\n    this.setState({newTime: event.target.value})\n  }\n  addReminder = (event) => {\n    event.preventDefault()\n    const newReminder = {\n      name: this.state.newName,\n      timestamp: new Date(this.state.newTime).toISOString()\n    }\n    if (this.state.reminders.some(reminder => reminder.name === this.state.newName)) {\n      alert('Reminder already exists')\n      this.setState({\n        newName: ''\n      })\n    }\n    else {\n      reminderService\n        .create(newReminder)\n        .then(response =>\n          this.setState({\n            reminders: this.state.reminders.concat(response),\n            newName: ''\n          })\n        )\n    }\n  }\n\n  deleteReminder = (id) => {\n    return () => {\n      if (window.confirm('Delete?')) {\n        reminderService\n          .remove(id)\n          .then(() => {\n            this.setState({\n              reminders: this.state.reminders.filter(r => r.id !== id)\n            })\n          })\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h2>Add reminder</h2>\n        <AddReminder\n          addReminder={this.addReminder}\n          nameChange={this.nameChange}\n          nameValue={this.state.newName}\n          timeChange={this.timeChange}\n          timeValue={this.state.newTime}\n        />\n        <h2>Reminders:</h2>\n          {this.state.reminders.map(reminder =>\n            <Reminder\n              key={reminder.id}\n              reminder={reminder}\n              deleter={this.deleteReminder(reminder.id)}\n            />)}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}